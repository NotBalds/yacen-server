// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v6.30.2
// source: yacen-api/yacen/latest/api.proto

package yacen_api_v2_2

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RoomType int32

const (
	RoomType_ROOM_TYPE_COMMON  RoomType = 0
	RoomType_ROOM_TYPE_CHANNEL RoomType = 1
)

// Enum value maps for RoomType.
var (
	RoomType_name = map[int32]string{
		0: "ROOM_TYPE_COMMON",
		1: "ROOM_TYPE_CHANNEL",
	}
	RoomType_value = map[string]int32{
		"ROOM_TYPE_COMMON":  0,
		"ROOM_TYPE_CHANNEL": 1,
	}
)

func (x RoomType) Enum() *RoomType {
	p := new(RoomType)
	*p = x
	return p
}

func (x RoomType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RoomType) Descriptor() protoreflect.EnumDescriptor {
	return file_yacen_api_yacen_latest_api_proto_enumTypes[0].Descriptor()
}

func (RoomType) Type() protoreflect.EnumType {
	return &file_yacen_api_yacen_latest_api_proto_enumTypes[0]
}

func (x RoomType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RoomType.Descriptor instead.
func (RoomType) EnumDescriptor() ([]byte, []int) {
	return file_yacen_api_yacen_latest_api_proto_rawDescGZIP(), []int{0}
}

type JoinRequestStatus int32

const (
	JoinRequestStatus_JOIN_REQUEST_STATUS_DENIED   JoinRequestStatus = 0
	JoinRequestStatus_JOIN_REQUEST_STATUS_PENDING  JoinRequestStatus = 1
	JoinRequestStatus_JOIN_REQUEST_STATUS_APPROVED JoinRequestStatus = 2
)

// Enum value maps for JoinRequestStatus.
var (
	JoinRequestStatus_name = map[int32]string{
		0: "JOIN_REQUEST_STATUS_DENIED",
		1: "JOIN_REQUEST_STATUS_PENDING",
		2: "JOIN_REQUEST_STATUS_APPROVED",
	}
	JoinRequestStatus_value = map[string]int32{
		"JOIN_REQUEST_STATUS_DENIED":   0,
		"JOIN_REQUEST_STATUS_PENDING":  1,
		"JOIN_REQUEST_STATUS_APPROVED": 2,
	}
)

func (x JoinRequestStatus) Enum() *JoinRequestStatus {
	p := new(JoinRequestStatus)
	*p = x
	return p
}

func (x JoinRequestStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JoinRequestStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_yacen_api_yacen_latest_api_proto_enumTypes[1].Descriptor()
}

func (JoinRequestStatus) Type() protoreflect.EnumType {
	return &file_yacen_api_yacen_latest_api_proto_enumTypes[1]
}

func (x JoinRequestStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use JoinRequestStatus.Descriptor instead.
func (JoinRequestStatus) EnumDescriptor() ([]byte, []int) {
	return file_yacen_api_yacen_latest_api_proto_rawDescGZIP(), []int{1}
}

type MessageUniqueID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce     []byte                 `protobuf:"bytes,1,opt,name=nonce,proto3" json:"nonce,omitempty"` // bytes[24]
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *MessageUniqueID) Reset() {
	*x = MessageUniqueID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yacen_api_yacen_latest_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageUniqueID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageUniqueID) ProtoMessage() {}

func (x *MessageUniqueID) ProtoReflect() protoreflect.Message {
	mi := &file_yacen_api_yacen_latest_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageUniqueID.ProtoReflect.Descriptor instead.
func (*MessageUniqueID) Descriptor() ([]byte, []int) {
	return file_yacen_api_yacen_latest_api_proto_rawDescGZIP(), []int{0}
}

func (x *MessageUniqueID) GetNonce() []byte {
	if x != nil {
		return x.Nonce
	}
	return nil
}

func (x *MessageUniqueID) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type Ed25519Signature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature []byte `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"` // 64 bytes ed25519 signature
	PublicKey string `protobuf:"bytes,2,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
}

func (x *Ed25519Signature) Reset() {
	*x = Ed25519Signature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yacen_api_yacen_latest_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ed25519Signature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ed25519Signature) ProtoMessage() {}

func (x *Ed25519Signature) ProtoReflect() protoreflect.Message {
	mi := &file_yacen_api_yacen_latest_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ed25519Signature.ProtoReflect.Descriptor instead.
func (*Ed25519Signature) Descriptor() ([]byte, []int) {
	return file_yacen_api_yacen_latest_api_proto_rawDescGZIP(), []int{1}
}

func (x *Ed25519Signature) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *Ed25519Signature) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

type RoomInfoPublic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EncryptedRoomName        []byte   `protobuf:"bytes,1,opt,name=encrypted_room_name,json=encryptedRoomName,proto3" json:"encrypted_room_name,omitempty"`                      // bytes(enc(AES_256_GCM, room_name))
	EncryptedRoomDescription []byte   `protobuf:"bytes,2,opt,name=encrypted_room_description,json=encryptedRoomDescription,proto3" json:"encrypted_room_description,omitempty"` // bytes(enc(AES_256_GCM, room_description))
	RoomType                 RoomType `protobuf:"varint,3,opt,name=room_type,json=roomType,proto3,enum=yacen_api.v2_2.RoomType" json:"room_type,omitempty"`                     // RoomType enum members
}

func (x *RoomInfoPublic) Reset() {
	*x = RoomInfoPublic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yacen_api_yacen_latest_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomInfoPublic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomInfoPublic) ProtoMessage() {}

func (x *RoomInfoPublic) ProtoReflect() protoreflect.Message {
	mi := &file_yacen_api_yacen_latest_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomInfoPublic.ProtoReflect.Descriptor instead.
func (*RoomInfoPublic) Descriptor() ([]byte, []int) {
	return file_yacen_api_yacen_latest_api_proto_rawDescGZIP(), []int{2}
}

func (x *RoomInfoPublic) GetEncryptedRoomName() []byte {
	if x != nil {
		return x.EncryptedRoomName
	}
	return nil
}

func (x *RoomInfoPublic) GetEncryptedRoomDescription() []byte {
	if x != nil {
		return x.EncryptedRoomDescription
	}
	return nil
}

func (x *RoomInfoPublic) GetRoomType() RoomType {
	if x != nil {
		return x.RoomType
	}
	return RoomType_ROOM_TYPE_COMMON
}

type RoomInfoPrivate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExtendedRightsPublicKeys []string `protobuf:"bytes,1,rep,name=extended_rights_public_keys,json=extendedRightsPublicKeys,proto3" json:"extended_rights_public_keys,omitempty"` // same key fmt as in meta ( base64(bytes[32]) ); default only owner
	AllowedPublicKeys        []string `protobuf:"bytes,2,rep,name=allowed_public_keys,json=allowedPublicKeys,proto3" json:"allowed_public_keys,omitempty"`                        // same key fmt as in meta ( base64(bytes[32]) ); default only owner
	PendingJoinRequests      []string `protobuf:"bytes,3,rep,name=pending_join_requests,json=pendingJoinRequests,proto3" json:"pending_join_requests,omitempty"`                  // default empty
}

func (x *RoomInfoPrivate) Reset() {
	*x = RoomInfoPrivate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yacen_api_yacen_latest_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomInfoPrivate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomInfoPrivate) ProtoMessage() {}

func (x *RoomInfoPrivate) ProtoReflect() protoreflect.Message {
	mi := &file_yacen_api_yacen_latest_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomInfoPrivate.ProtoReflect.Descriptor instead.
func (*RoomInfoPrivate) Descriptor() ([]byte, []int) {
	return file_yacen_api_yacen_latest_api_proto_rawDescGZIP(), []int{3}
}

func (x *RoomInfoPrivate) GetExtendedRightsPublicKeys() []string {
	if x != nil {
		return x.ExtendedRightsPublicKeys
	}
	return nil
}

func (x *RoomInfoPrivate) GetAllowedPublicKeys() []string {
	if x != nil {
		return x.AllowedPublicKeys
	}
	return nil
}

func (x *RoomInfoPrivate) GetPendingJoinRequests() []string {
	if x != nil {
		return x.PendingJoinRequests
	}
	return nil
}

type CreateRoomReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicInfo *RoomInfoPublic  `protobuf:"bytes,1,opt,name=public_info,json=publicInfo,proto3" json:"public_info,omitempty"`
	Muid       *MessageUniqueID `protobuf:"bytes,5,opt,name=muid,proto3" json:"muid,omitempty"`
}

func (x *CreateRoomReq) Reset() {
	*x = CreateRoomReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yacen_api_yacen_latest_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRoomReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoomReq) ProtoMessage() {}

func (x *CreateRoomReq) ProtoReflect() protoreflect.Message {
	mi := &file_yacen_api_yacen_latest_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoomReq.ProtoReflect.Descriptor instead.
func (*CreateRoomReq) Descriptor() ([]byte, []int) {
	return file_yacen_api_yacen_latest_api_proto_rawDescGZIP(), []int{4}
}

func (x *CreateRoomReq) GetPublicInfo() *RoomInfoPublic {
	if x != nil {
		return x.PublicInfo
	}
	return nil
}

func (x *CreateRoomReq) GetMuid() *MessageUniqueID {
	if x != nil {
		return x.Muid
	}
	return nil
}

type CreateRoomRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId string           `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"` // hex( bytes[32] )
	Muid   *MessageUniqueID `protobuf:"bytes,5,opt,name=muid,proto3" json:"muid,omitempty"`
}

func (x *CreateRoomRes) Reset() {
	*x = CreateRoomRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yacen_api_yacen_latest_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRoomRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoomRes) ProtoMessage() {}

func (x *CreateRoomRes) ProtoReflect() protoreflect.Message {
	mi := &file_yacen_api_yacen_latest_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoomRes.ProtoReflect.Descriptor instead.
func (*CreateRoomRes) Descriptor() ([]byte, []int) {
	return file_yacen_api_yacen_latest_api_proto_rawDescGZIP(), []int{5}
}

func (x *CreateRoomRes) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *CreateRoomRes) GetMuid() *MessageUniqueID {
	if x != nil {
		return x.Muid
	}
	return nil
}

type RequestJoinRoomReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId         string           `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`                           // hex( bytes[32] )
	EciesPublicKey string           `protobuf:"bytes,2,opt,name=ecies_public_key,json=eciesPublicKey,proto3" json:"ecies_public_key,omitempty"` // base64( bytes_pubkey )
	Muid           *MessageUniqueID `protobuf:"bytes,5,opt,name=muid,proto3" json:"muid,omitempty"`
}

func (x *RequestJoinRoomReq) Reset() {
	*x = RequestJoinRoomReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yacen_api_yacen_latest_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestJoinRoomReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestJoinRoomReq) ProtoMessage() {}

func (x *RequestJoinRoomReq) ProtoReflect() protoreflect.Message {
	mi := &file_yacen_api_yacen_latest_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestJoinRoomReq.ProtoReflect.Descriptor instead.
func (*RequestJoinRoomReq) Descriptor() ([]byte, []int) {
	return file_yacen_api_yacen_latest_api_proto_rawDescGZIP(), []int{6}
}

func (x *RequestJoinRoomReq) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *RequestJoinRoomReq) GetEciesPublicKey() string {
	if x != nil {
		return x.EciesPublicKey
	}
	return ""
}

func (x *RequestJoinRoomReq) GetMuid() *MessageUniqueID {
	if x != nil {
		return x.Muid
	}
	return nil
}

type RequestJoinRoomRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JoinRequestId string           `protobuf:"bytes,1,opt,name=join_request_id,json=joinRequestId,proto3" json:"join_request_id,omitempty"`
	Muid          *MessageUniqueID `protobuf:"bytes,5,opt,name=muid,proto3" json:"muid,omitempty"`
}

func (x *RequestJoinRoomRes) Reset() {
	*x = RequestJoinRoomRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yacen_api_yacen_latest_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestJoinRoomRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestJoinRoomRes) ProtoMessage() {}

func (x *RequestJoinRoomRes) ProtoReflect() protoreflect.Message {
	mi := &file_yacen_api_yacen_latest_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestJoinRoomRes.ProtoReflect.Descriptor instead.
func (*RequestJoinRoomRes) Descriptor() ([]byte, []int) {
	return file_yacen_api_yacen_latest_api_proto_rawDescGZIP(), []int{7}
}

func (x *RequestJoinRoomRes) GetJoinRequestId() string {
	if x != nil {
		return x.JoinRequestId
	}
	return ""
}

func (x *RequestJoinRoomRes) GetMuid() *MessageUniqueID {
	if x != nil {
		return x.Muid
	}
	return nil
}

type ApproveJoinRequestReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JoinRequestId         string           `protobuf:"bytes,1,opt,name=join_request_id,json=joinRequestId,proto3" json:"join_request_id,omitempty"`
	EciesEncryptedRoomKey string           `protobuf:"bytes,2,opt,name=ecies_encrypted_room_key,json=eciesEncryptedRoomKey,proto3" json:"ecies_encrypted_room_key,omitempty"`
	Muid                  *MessageUniqueID `protobuf:"bytes,5,opt,name=muid,proto3" json:"muid,omitempty"`
}

func (x *ApproveJoinRequestReq) Reset() {
	*x = ApproveJoinRequestReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yacen_api_yacen_latest_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApproveJoinRequestReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveJoinRequestReq) ProtoMessage() {}

func (x *ApproveJoinRequestReq) ProtoReflect() protoreflect.Message {
	mi := &file_yacen_api_yacen_latest_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveJoinRequestReq.ProtoReflect.Descriptor instead.
func (*ApproveJoinRequestReq) Descriptor() ([]byte, []int) {
	return file_yacen_api_yacen_latest_api_proto_rawDescGZIP(), []int{8}
}

func (x *ApproveJoinRequestReq) GetJoinRequestId() string {
	if x != nil {
		return x.JoinRequestId
	}
	return ""
}

func (x *ApproveJoinRequestReq) GetEciesEncryptedRoomKey() string {
	if x != nil {
		return x.EciesEncryptedRoomKey
	}
	return ""
}

func (x *ApproveJoinRequestReq) GetMuid() *MessageUniqueID {
	if x != nil {
		return x.Muid
	}
	return nil
}

type ApproveJoinRequestRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Muid *MessageUniqueID `protobuf:"bytes,5,opt,name=muid,proto3" json:"muid,omitempty"`
}

func (x *ApproveJoinRequestRes) Reset() {
	*x = ApproveJoinRequestRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yacen_api_yacen_latest_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApproveJoinRequestRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveJoinRequestRes) ProtoMessage() {}

func (x *ApproveJoinRequestRes) ProtoReflect() protoreflect.Message {
	mi := &file_yacen_api_yacen_latest_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveJoinRequestRes.ProtoReflect.Descriptor instead.
func (*ApproveJoinRequestRes) Descriptor() ([]byte, []int) {
	return file_yacen_api_yacen_latest_api_proto_rawDescGZIP(), []int{9}
}

func (x *ApproveJoinRequestRes) GetMuid() *MessageUniqueID {
	if x != nil {
		return x.Muid
	}
	return nil
}

type GetJoinRequestStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JoinRequestId string           `protobuf:"bytes,1,opt,name=join_request_id,json=joinRequestId,proto3" json:"join_request_id,omitempty"`
	Muid          *MessageUniqueID `protobuf:"bytes,5,opt,name=muid,proto3" json:"muid,omitempty"`
}

func (x *GetJoinRequestStatusReq) Reset() {
	*x = GetJoinRequestStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yacen_api_yacen_latest_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJoinRequestStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJoinRequestStatusReq) ProtoMessage() {}

func (x *GetJoinRequestStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_yacen_api_yacen_latest_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJoinRequestStatusReq.ProtoReflect.Descriptor instead.
func (*GetJoinRequestStatusReq) Descriptor() ([]byte, []int) {
	return file_yacen_api_yacen_latest_api_proto_rawDescGZIP(), []int{10}
}

func (x *GetJoinRequestStatusReq) GetJoinRequestId() string {
	if x != nil {
		return x.JoinRequestId
	}
	return ""
}

func (x *GetJoinRequestStatusReq) GetMuid() *MessageUniqueID {
	if x != nil {
		return x.Muid
	}
	return nil
}

type GetJoinRequestStatusRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status                JoinRequestStatus `protobuf:"varint,1,opt,name=status,proto3,enum=yacen_api.v2_2.JoinRequestStatus" json:"status,omitempty"`
	EciesEncryptedRoomKey *string           `protobuf:"bytes,2,opt,name=ecies_encrypted_room_key,json=eciesEncryptedRoomKey,proto3,oneof" json:"ecies_encrypted_room_key,omitempty"`
	Muid                  *MessageUniqueID  `protobuf:"bytes,5,opt,name=muid,proto3" json:"muid,omitempty"`
}

func (x *GetJoinRequestStatusRes) Reset() {
	*x = GetJoinRequestStatusRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yacen_api_yacen_latest_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJoinRequestStatusRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJoinRequestStatusRes) ProtoMessage() {}

func (x *GetJoinRequestStatusRes) ProtoReflect() protoreflect.Message {
	mi := &file_yacen_api_yacen_latest_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJoinRequestStatusRes.ProtoReflect.Descriptor instead.
func (*GetJoinRequestStatusRes) Descriptor() ([]byte, []int) {
	return file_yacen_api_yacen_latest_api_proto_rawDescGZIP(), []int{11}
}

func (x *GetJoinRequestStatusRes) GetStatus() JoinRequestStatus {
	if x != nil {
		return x.Status
	}
	return JoinRequestStatus_JOIN_REQUEST_STATUS_DENIED
}

func (x *GetJoinRequestStatusRes) GetEciesEncryptedRoomKey() string {
	if x != nil && x.EciesEncryptedRoomKey != nil {
		return *x.EciesEncryptedRoomKey
	}
	return ""
}

func (x *GetJoinRequestStatusRes) GetMuid() *MessageUniqueID {
	if x != nil {
		return x.Muid
	}
	return nil
}

type GetRoomInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId string           `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"` // hex( bytes[32] )
	Muid   *MessageUniqueID `protobuf:"bytes,5,opt,name=muid,proto3" json:"muid,omitempty"`
}

func (x *GetRoomInfoReq) Reset() {
	*x = GetRoomInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yacen_api_yacen_latest_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoomInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoomInfoReq) ProtoMessage() {}

func (x *GetRoomInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_yacen_api_yacen_latest_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoomInfoReq.ProtoReflect.Descriptor instead.
func (*GetRoomInfoReq) Descriptor() ([]byte, []int) {
	return file_yacen_api_yacen_latest_api_proto_rawDescGZIP(), []int{12}
}

func (x *GetRoomInfoReq) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *GetRoomInfoReq) GetMuid() *MessageUniqueID {
	if x != nil {
		return x.Muid
	}
	return nil
}

type GetRoomInfoRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicInfo  *RoomInfoPublic  `protobuf:"bytes,1,opt,name=public_info,json=publicInfo,proto3" json:"public_info,omitempty"`
	PrivateInfo *RoomInfoPrivate `protobuf:"bytes,2,opt,name=private_info,json=privateInfo,proto3,oneof" json:"private_info,omitempty"` // only if sender is owner
	Muid        *MessageUniqueID `protobuf:"bytes,5,opt,name=muid,proto3" json:"muid,omitempty"`
}

func (x *GetRoomInfoRes) Reset() {
	*x = GetRoomInfoRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yacen_api_yacen_latest_api_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoomInfoRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoomInfoRes) ProtoMessage() {}

func (x *GetRoomInfoRes) ProtoReflect() protoreflect.Message {
	mi := &file_yacen_api_yacen_latest_api_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoomInfoRes.ProtoReflect.Descriptor instead.
func (*GetRoomInfoRes) Descriptor() ([]byte, []int) {
	return file_yacen_api_yacen_latest_api_proto_rawDescGZIP(), []int{13}
}

func (x *GetRoomInfoRes) GetPublicInfo() *RoomInfoPublic {
	if x != nil {
		return x.PublicInfo
	}
	return nil
}

func (x *GetRoomInfoRes) GetPrivateInfo() *RoomInfoPrivate {
	if x != nil {
		return x.PrivateInfo
	}
	return nil
}

func (x *GetRoomInfoRes) GetMuid() *MessageUniqueID {
	if x != nil {
		return x.Muid
	}
	return nil
}

type UpdateRoomInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId     string           `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	PublicInfo *RoomInfoPublic  `protobuf:"bytes,2,opt,name=public_info,json=publicInfo,proto3" json:"public_info,omitempty"`
	Muid       *MessageUniqueID `protobuf:"bytes,5,opt,name=muid,proto3" json:"muid,omitempty"`
}

func (x *UpdateRoomInfoReq) Reset() {
	*x = UpdateRoomInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yacen_api_yacen_latest_api_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRoomInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRoomInfoReq) ProtoMessage() {}

func (x *UpdateRoomInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_yacen_api_yacen_latest_api_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRoomInfoReq.ProtoReflect.Descriptor instead.
func (*UpdateRoomInfoReq) Descriptor() ([]byte, []int) {
	return file_yacen_api_yacen_latest_api_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateRoomInfoReq) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *UpdateRoomInfoReq) GetPublicInfo() *RoomInfoPublic {
	if x != nil {
		return x.PublicInfo
	}
	return nil
}

func (x *UpdateRoomInfoReq) GetMuid() *MessageUniqueID {
	if x != nil {
		return x.Muid
	}
	return nil
}

type UpdateRoomInfoRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Muid *MessageUniqueID `protobuf:"bytes,5,opt,name=muid,proto3" json:"muid,omitempty"`
}

func (x *UpdateRoomInfoRes) Reset() {
	*x = UpdateRoomInfoRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yacen_api_yacen_latest_api_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRoomInfoRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRoomInfoRes) ProtoMessage() {}

func (x *UpdateRoomInfoRes) ProtoReflect() protoreflect.Message {
	mi := &file_yacen_api_yacen_latest_api_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRoomInfoRes.ProtoReflect.Descriptor instead.
func (*UpdateRoomInfoRes) Descriptor() ([]byte, []int) {
	return file_yacen_api_yacen_latest_api_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateRoomInfoRes) GetMuid() *MessageUniqueID {
	if x != nil {
		return x.Muid
	}
	return nil
}

type DeleteRoomReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId string           `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"` // hex( bytes[32] )
	Muid   *MessageUniqueID `protobuf:"bytes,5,opt,name=muid,proto3" json:"muid,omitempty"`
}

func (x *DeleteRoomReq) Reset() {
	*x = DeleteRoomReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yacen_api_yacen_latest_api_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRoomReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRoomReq) ProtoMessage() {}

func (x *DeleteRoomReq) ProtoReflect() protoreflect.Message {
	mi := &file_yacen_api_yacen_latest_api_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRoomReq.ProtoReflect.Descriptor instead.
func (*DeleteRoomReq) Descriptor() ([]byte, []int) {
	return file_yacen_api_yacen_latest_api_proto_rawDescGZIP(), []int{16}
}

func (x *DeleteRoomReq) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *DeleteRoomReq) GetMuid() *MessageUniqueID {
	if x != nil {
		return x.Muid
	}
	return nil
}

type DeleteRoomRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Muid *MessageUniqueID `protobuf:"bytes,5,opt,name=muid,proto3" json:"muid,omitempty"`
}

func (x *DeleteRoomRes) Reset() {
	*x = DeleteRoomRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yacen_api_yacen_latest_api_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRoomRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRoomRes) ProtoMessage() {}

func (x *DeleteRoomRes) ProtoReflect() protoreflect.Message {
	mi := &file_yacen_api_yacen_latest_api_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRoomRes.ProtoReflect.Descriptor instead.
func (*DeleteRoomRes) Descriptor() ([]byte, []int) {
	return file_yacen_api_yacen_latest_api_proto_rawDescGZIP(), []int{17}
}

func (x *DeleteRoomRes) GetMuid() *MessageUniqueID {
	if x != nil {
		return x.Muid
	}
	return nil
}

type GiveExtendedRightsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetPubkeys []string         `protobuf:"bytes,1,rep,name=target_pubkeys,json=targetPubkeys,proto3" json:"target_pubkeys,omitempty"`
	Muid          *MessageUniqueID `protobuf:"bytes,5,opt,name=muid,proto3" json:"muid,omitempty"`
}

func (x *GiveExtendedRightsReq) Reset() {
	*x = GiveExtendedRightsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yacen_api_yacen_latest_api_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GiveExtendedRightsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GiveExtendedRightsReq) ProtoMessage() {}

func (x *GiveExtendedRightsReq) ProtoReflect() protoreflect.Message {
	mi := &file_yacen_api_yacen_latest_api_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GiveExtendedRightsReq.ProtoReflect.Descriptor instead.
func (*GiveExtendedRightsReq) Descriptor() ([]byte, []int) {
	return file_yacen_api_yacen_latest_api_proto_rawDescGZIP(), []int{18}
}

func (x *GiveExtendedRightsReq) GetTargetPubkeys() []string {
	if x != nil {
		return x.TargetPubkeys
	}
	return nil
}

func (x *GiveExtendedRightsReq) GetMuid() *MessageUniqueID {
	if x != nil {
		return x.Muid
	}
	return nil
}

type GiveExtendedRightsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Muid *MessageUniqueID `protobuf:"bytes,5,opt,name=muid,proto3" json:"muid,omitempty"`
}

func (x *GiveExtendedRightsRes) Reset() {
	*x = GiveExtendedRightsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yacen_api_yacen_latest_api_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GiveExtendedRightsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GiveExtendedRightsRes) ProtoMessage() {}

func (x *GiveExtendedRightsRes) ProtoReflect() protoreflect.Message {
	mi := &file_yacen_api_yacen_latest_api_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GiveExtendedRightsRes.ProtoReflect.Descriptor instead.
func (*GiveExtendedRightsRes) Descriptor() ([]byte, []int) {
	return file_yacen_api_yacen_latest_api_proto_rawDescGZIP(), []int{19}
}

func (x *GiveExtendedRightsRes) GetMuid() *MessageUniqueID {
	if x != nil {
		return x.Muid
	}
	return nil
}

type RemoveExtendedRightsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetPubkeys []string         `protobuf:"bytes,1,rep,name=target_pubkeys,json=targetPubkeys,proto3" json:"target_pubkeys,omitempty"`
	Muid          *MessageUniqueID `protobuf:"bytes,5,opt,name=muid,proto3" json:"muid,omitempty"`
}

func (x *RemoveExtendedRightsReq) Reset() {
	*x = RemoveExtendedRightsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yacen_api_yacen_latest_api_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveExtendedRightsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveExtendedRightsReq) ProtoMessage() {}

func (x *RemoveExtendedRightsReq) ProtoReflect() protoreflect.Message {
	mi := &file_yacen_api_yacen_latest_api_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveExtendedRightsReq.ProtoReflect.Descriptor instead.
func (*RemoveExtendedRightsReq) Descriptor() ([]byte, []int) {
	return file_yacen_api_yacen_latest_api_proto_rawDescGZIP(), []int{20}
}

func (x *RemoveExtendedRightsReq) GetTargetPubkeys() []string {
	if x != nil {
		return x.TargetPubkeys
	}
	return nil
}

func (x *RemoveExtendedRightsReq) GetMuid() *MessageUniqueID {
	if x != nil {
		return x.Muid
	}
	return nil
}

type RemoveExtendedRightsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Muid *MessageUniqueID `protobuf:"bytes,5,opt,name=muid,proto3" json:"muid,omitempty"`
}

func (x *RemoveExtendedRightsRes) Reset() {
	*x = RemoveExtendedRightsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yacen_api_yacen_latest_api_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveExtendedRightsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveExtendedRightsRes) ProtoMessage() {}

func (x *RemoveExtendedRightsRes) ProtoReflect() protoreflect.Message {
	mi := &file_yacen_api_yacen_latest_api_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveExtendedRightsRes.ProtoReflect.Descriptor instead.
func (*RemoveExtendedRightsRes) Descriptor() ([]byte, []int) {
	return file_yacen_api_yacen_latest_api_proto_rawDescGZIP(), []int{21}
}

func (x *RemoveExtendedRightsRes) GetMuid() *MessageUniqueID {
	if x != nil {
		return x.Muid
	}
	return nil
}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Payload:
	//
	//	*Message_EncryptedText
	//	*Message_EncryptedFileId
	Payload isMessage_Payload `protobuf_oneof:"payload"`
	Muid    *MessageUniqueID  `protobuf:"bytes,5,opt,name=muid,proto3" json:"muid,omitempty"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yacen_api_yacen_latest_api_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_yacen_api_yacen_latest_api_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_yacen_api_yacen_latest_api_proto_rawDescGZIP(), []int{22}
}

func (m *Message) GetPayload() isMessage_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *Message) GetEncryptedText() []byte {
	if x, ok := x.GetPayload().(*Message_EncryptedText); ok {
		return x.EncryptedText
	}
	return nil
}

func (x *Message) GetEncryptedFileId() []byte {
	if x, ok := x.GetPayload().(*Message_EncryptedFileId); ok {
		return x.EncryptedFileId
	}
	return nil
}

func (x *Message) GetMuid() *MessageUniqueID {
	if x != nil {
		return x.Muid
	}
	return nil
}

type isMessage_Payload interface {
	isMessage_Payload()
}

type Message_EncryptedText struct {
	EncryptedText []byte `protobuf:"bytes,1,opt,name=encrypted_text,json=encryptedText,proto3,oneof"`
}

type Message_EncryptedFileId struct {
	EncryptedFileId []byte `protobuf:"bytes,2,opt,name=encrypted_file_id,json=encryptedFileId,proto3,oneof"` //
}

func (*Message_EncryptedText) isMessage_Payload() {}

func (*Message_EncryptedFileId) isMessage_Payload() {}

type SendMessageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId    string            `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	Message   *Message          `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Signature *Ed25519Signature `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"` // 64 bytes ed25519 signature of encoded Message protobuf-object
}

func (x *SendMessageReq) Reset() {
	*x = SendMessageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yacen_api_yacen_latest_api_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMessageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageReq) ProtoMessage() {}

func (x *SendMessageReq) ProtoReflect() protoreflect.Message {
	mi := &file_yacen_api_yacen_latest_api_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageReq.ProtoReflect.Descriptor instead.
func (*SendMessageReq) Descriptor() ([]byte, []int) {
	return file_yacen_api_yacen_latest_api_proto_rawDescGZIP(), []int{23}
}

func (x *SendMessageReq) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *SendMessageReq) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *SendMessageReq) GetSignature() *Ed25519Signature {
	if x != nil {
		return x.Signature
	}
	return nil
}

type SendMessageRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Muid *MessageUniqueID `protobuf:"bytes,5,opt,name=muid,proto3" json:"muid,omitempty"`
}

func (x *SendMessageRes) Reset() {
	*x = SendMessageRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yacen_api_yacen_latest_api_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMessageRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageRes) ProtoMessage() {}

func (x *SendMessageRes) ProtoReflect() protoreflect.Message {
	mi := &file_yacen_api_yacen_latest_api_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageRes.ProtoReflect.Descriptor instead.
func (*SendMessageRes) Descriptor() ([]byte, []int) {
	return file_yacen_api_yacen_latest_api_proto_rawDescGZIP(), []int{24}
}

func (x *SendMessageRes) GetMuid() *MessageUniqueID {
	if x != nil {
		return x.Muid
	}
	return nil
}

type GetMessageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId string           `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	Muid   *MessageUniqueID `protobuf:"bytes,5,opt,name=muid,proto3" json:"muid,omitempty"`
}

func (x *GetMessageReq) Reset() {
	*x = GetMessageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yacen_api_yacen_latest_api_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMessageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMessageReq) ProtoMessage() {}

func (x *GetMessageReq) ProtoReflect() protoreflect.Message {
	mi := &file_yacen_api_yacen_latest_api_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMessageReq.ProtoReflect.Descriptor instead.
func (*GetMessageReq) Descriptor() ([]byte, []int) {
	return file_yacen_api_yacen_latest_api_proto_rawDescGZIP(), []int{25}
}

func (x *GetMessageReq) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *GetMessageReq) GetMuid() *MessageUniqueID {
	if x != nil {
		return x.Muid
	}
	return nil
}

type GetMessageRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message   *Message          `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`     // Here is MUID which is has original date and nonce from sender to match the signature
	Signature *Ed25519Signature `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"` // 64 bytes ed25519 signature of encoded Message protobuf-object
	Muid      *MessageUniqueID  `protobuf:"bytes,5,opt,name=muid,proto3" json:"muid,omitempty"`           // Here is another MUID but it has actual date and new nonce. It belongs to server verification
}

func (x *GetMessageRes) Reset() {
	*x = GetMessageRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yacen_api_yacen_latest_api_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMessageRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMessageRes) ProtoMessage() {}

func (x *GetMessageRes) ProtoReflect() protoreflect.Message {
	mi := &file_yacen_api_yacen_latest_api_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMessageRes.ProtoReflect.Descriptor instead.
func (*GetMessageRes) Descriptor() ([]byte, []int) {
	return file_yacen_api_yacen_latest_api_proto_rawDescGZIP(), []int{26}
}

func (x *GetMessageRes) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *GetMessageRes) GetSignature() *Ed25519Signature {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *GetMessageRes) GetMuid() *MessageUniqueID {
	if x != nil {
		return x.Muid
	}
	return nil
}

type FileChunk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChunkId       int32            `protobuf:"varint,1,opt,name=chunk_id,json=chunkId,proto3" json:"chunk_id,omitempty"`
	ChunkCount    int32            `protobuf:"varint,2,opt,name=chunk_count,json=chunkCount,proto3" json:"chunk_count,omitempty"`
	EncryptedData []byte           `protobuf:"bytes,3,opt,name=encrypted_data,json=encryptedData,proto3" json:"encrypted_data,omitempty"`
	Muid          *MessageUniqueID `protobuf:"bytes,5,opt,name=muid,proto3" json:"muid,omitempty"`
}

func (x *FileChunk) Reset() {
	*x = FileChunk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yacen_api_yacen_latest_api_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileChunk) ProtoMessage() {}

func (x *FileChunk) ProtoReflect() protoreflect.Message {
	mi := &file_yacen_api_yacen_latest_api_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileChunk.ProtoReflect.Descriptor instead.
func (*FileChunk) Descriptor() ([]byte, []int) {
	return file_yacen_api_yacen_latest_api_proto_rawDescGZIP(), []int{27}
}

func (x *FileChunk) GetChunkId() int32 {
	if x != nil {
		return x.ChunkId
	}
	return 0
}

func (x *FileChunk) GetChunkCount() int32 {
	if x != nil {
		return x.ChunkCount
	}
	return 0
}

func (x *FileChunk) GetEncryptedData() []byte {
	if x != nil {
		return x.EncryptedData
	}
	return nil
}

func (x *FileChunk) GetMuid() *MessageUniqueID {
	if x != nil {
		return x.Muid
	}
	return nil
}

type UploadFileReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId         string            `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	Chunk          *FileChunk        `protobuf:"bytes,2,opt,name=chunk,proto3" json:"chunk,omitempty"`
	ChunkSignature *Ed25519Signature `protobuf:"bytes,3,opt,name=chunk_signature,json=chunkSignature,proto3" json:"chunk_signature,omitempty"` // signature of FileChunk
}

func (x *UploadFileReq) Reset() {
	*x = UploadFileReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yacen_api_yacen_latest_api_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadFileReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileReq) ProtoMessage() {}

func (x *UploadFileReq) ProtoReflect() protoreflect.Message {
	mi := &file_yacen_api_yacen_latest_api_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileReq.ProtoReflect.Descriptor instead.
func (*UploadFileReq) Descriptor() ([]byte, []int) {
	return file_yacen_api_yacen_latest_api_proto_rawDescGZIP(), []int{28}
}

func (x *UploadFileReq) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *UploadFileReq) GetChunk() *FileChunk {
	if x != nil {
		return x.Chunk
	}
	return nil
}

func (x *UploadFileReq) GetChunkSignature() *Ed25519Signature {
	if x != nil {
		return x.ChunkSignature
	}
	return nil
}

type UploadFileRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileId    string                 `protobuf:"bytes,1,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"` // hex( bytes[32] )
	ExpiresAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	Muid      *MessageUniqueID       `protobuf:"bytes,5,opt,name=muid,proto3" json:"muid,omitempty"`
}

func (x *UploadFileRes) Reset() {
	*x = UploadFileRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yacen_api_yacen_latest_api_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadFileRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileRes) ProtoMessage() {}

func (x *UploadFileRes) ProtoReflect() protoreflect.Message {
	mi := &file_yacen_api_yacen_latest_api_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileRes.ProtoReflect.Descriptor instead.
func (*UploadFileRes) Descriptor() ([]byte, []int) {
	return file_yacen_api_yacen_latest_api_proto_rawDescGZIP(), []int{29}
}

func (x *UploadFileRes) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *UploadFileRes) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *UploadFileRes) GetMuid() *MessageUniqueID {
	if x != nil {
		return x.Muid
	}
	return nil
}

type DownloadFileReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileId string           `protobuf:"bytes,1,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	Muid   *MessageUniqueID `protobuf:"bytes,5,opt,name=muid,proto3" json:"muid,omitempty"`
}

func (x *DownloadFileReq) Reset() {
	*x = DownloadFileReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yacen_api_yacen_latest_api_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadFileReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadFileReq) ProtoMessage() {}

func (x *DownloadFileReq) ProtoReflect() protoreflect.Message {
	mi := &file_yacen_api_yacen_latest_api_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadFileReq.ProtoReflect.Descriptor instead.
func (*DownloadFileReq) Descriptor() ([]byte, []int) {
	return file_yacen_api_yacen_latest_api_proto_rawDescGZIP(), []int{30}
}

func (x *DownloadFileReq) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *DownloadFileReq) GetMuid() *MessageUniqueID {
	if x != nil {
		return x.Muid
	}
	return nil
}

type DownloadFileRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chunk          *FileChunk        `protobuf:"bytes,1,opt,name=chunk,proto3" json:"chunk,omitempty"` // Here is MUID which is has original date and nonce from sender to match the signature
	ChunkSignature *Ed25519Signature `protobuf:"bytes,2,opt,name=chunk_signature,json=chunkSignature,proto3" json:"chunk_signature,omitempty"`
	Muid           *MessageUniqueID  `protobuf:"bytes,5,opt,name=muid,proto3" json:"muid,omitempty"` // Here is another MUID but it has actual date and new nonce. It belongs to server verification
}

func (x *DownloadFileRes) Reset() {
	*x = DownloadFileRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yacen_api_yacen_latest_api_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadFileRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadFileRes) ProtoMessage() {}

func (x *DownloadFileRes) ProtoReflect() protoreflect.Message {
	mi := &file_yacen_api_yacen_latest_api_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadFileRes.ProtoReflect.Descriptor instead.
func (*DownloadFileRes) Descriptor() ([]byte, []int) {
	return file_yacen_api_yacen_latest_api_proto_rawDescGZIP(), []int{31}
}

func (x *DownloadFileRes) GetChunk() *FileChunk {
	if x != nil {
		return x.Chunk
	}
	return nil
}

func (x *DownloadFileRes) GetChunkSignature() *Ed25519Signature {
	if x != nil {
		return x.ChunkSignature
	}
	return nil
}

func (x *DownloadFileRes) GetMuid() *MessageUniqueID {
	if x != nil {
		return x.Muid
	}
	return nil
}

var File_yacen_api_yacen_latest_api_proto protoreflect.FileDescriptor

var file_yacen_api_yacen_latest_api_proto_rawDesc = []byte{
	0x0a, 0x20, 0x79, 0x61, 0x63, 0x65, 0x6e, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x79, 0x61, 0x63, 0x65,
	0x6e, 0x2f, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0e, 0x79, 0x61, 0x63, 0x65, 0x6e, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32,
	0x5f, 0x32, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x61, 0x0a, 0x0f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x55, 0x6e,
	0x69, 0x71, 0x75, 0x65, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x38, 0x0a, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x4f, 0x0a, 0x10, 0x45, 0x64, 0x32, 0x35, 0x35, 0x31,
	0x39, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x22, 0xbb, 0x01, 0x0a, 0x0e, 0x52, 0x6f, 0x6f, 0x6d,
	0x49, 0x6e, 0x66, 0x6f, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x12, 0x2e, 0x0a, 0x13, 0x65, 0x6e,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x11, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x65, 0x64, 0x52, 0x6f, 0x6f, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3c, 0x0a, 0x1a, 0x65, 0x6e,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x18,
	0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x52, 0x6f, 0x6f, 0x6d, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x09, 0x72, 0x6f, 0x6f, 0x6d,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x79, 0x61,
	0x63, 0x65, 0x6e, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x5f, 0x32, 0x2e, 0x52, 0x6f, 0x6f,
	0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x4a,
	0x04, 0x08, 0x04, 0x10, 0x07, 0x22, 0xba, 0x01, 0x0a, 0x0f, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e,
	0x66, 0x6f, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x12, 0x3d, 0x0a, 0x1b, 0x65, 0x78, 0x74,
	0x65, 0x6e, 0x64, 0x65, 0x64, 0x5f, 0x72, 0x69, 0x67, 0x68, 0x74, 0x73, 0x5f, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x18,
	0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x61, 0x6c, 0x6c, 0x6f,
	0x77, 0x65, 0x64, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x32, 0x0a, 0x15, 0x70, 0x65, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x5f, 0x6a, 0x6f, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x4a, 0x04, 0x08, 0x04,
	0x10, 0x07, 0x22, 0x85, 0x01, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f,
	0x6d, 0x52, 0x65, 0x71, 0x12, 0x3f, 0x0a, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x79, 0x61, 0x63, 0x65,
	0x6e, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x5f, 0x32, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x49,
	0x6e, 0x66, 0x6f, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x52, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x33, 0x0a, 0x04, 0x6d, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x79, 0x61, 0x63, 0x65, 0x6e, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x32, 0x5f, 0x32, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x55, 0x6e, 0x69, 0x71,
	0x75, 0x65, 0x49, 0x44, 0x52, 0x04, 0x6d, 0x75, 0x69, 0x64, 0x22, 0x5d, 0x0a, 0x0d, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x72,
	0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f,
	0x6f, 0x6d, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x04, 0x6d, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x79, 0x61, 0x63, 0x65, 0x6e, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x32, 0x5f, 0x32, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x55, 0x6e, 0x69, 0x71, 0x75,
	0x65, 0x49, 0x44, 0x52, 0x04, 0x6d, 0x75, 0x69, 0x64, 0x22, 0x8c, 0x01, 0x0a, 0x12, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71,
	0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x65, 0x63, 0x69,
	0x65, 0x73, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x63, 0x69, 0x65, 0x73, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x4b, 0x65, 0x79, 0x12, 0x33, 0x0a, 0x04, 0x6d, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x79, 0x61, 0x63, 0x65, 0x6e, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32,
	0x5f, 0x32, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65,
	0x49, 0x44, 0x52, 0x04, 0x6d, 0x75, 0x69, 0x64, 0x22, 0x71, 0x0a, 0x12, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x12, 0x26,
	0x0a, 0x0f, 0x6a, 0x6f, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x04, 0x6d, 0x75, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x79, 0x61, 0x63, 0x65, 0x6e, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x32, 0x5f, 0x32, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x55, 0x6e, 0x69,
	0x71, 0x75, 0x65, 0x49, 0x44, 0x52, 0x04, 0x6d, 0x75, 0x69, 0x64, 0x22, 0xad, 0x01, 0x0a, 0x15,
	0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x26, 0x0a, 0x0f, 0x6a, 0x6f, 0x69, 0x6e, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x6a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x37, 0x0a,
	0x18, 0x65, 0x63, 0x69, 0x65, 0x73, 0x5f, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64,
	0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x15, 0x65, 0x63, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x52,
	0x6f, 0x6f, 0x6d, 0x4b, 0x65, 0x79, 0x12, 0x33, 0x0a, 0x04, 0x6d, 0x75, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x79, 0x61, 0x63, 0x65, 0x6e, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x32, 0x5f, 0x32, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x55, 0x6e, 0x69,
	0x71, 0x75, 0x65, 0x49, 0x44, 0x52, 0x04, 0x6d, 0x75, 0x69, 0x64, 0x22, 0x4c, 0x0a, 0x15, 0x41,
	0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x12, 0x33, 0x0a, 0x04, 0x6d, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x79, 0x61, 0x63, 0x65, 0x6e, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x32, 0x5f, 0x32, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x55, 0x6e, 0x69, 0x71, 0x75,
	0x65, 0x49, 0x44, 0x52, 0x04, 0x6d, 0x75, 0x69, 0x64, 0x22, 0x76, 0x0a, 0x17, 0x47, 0x65, 0x74,
	0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x71, 0x12, 0x26, 0x0a, 0x0f, 0x6a, 0x6f, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6a,
	0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x04,
	0x6d, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x79, 0x61, 0x63,
	0x65, 0x6e, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x5f, 0x32, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x44, 0x52, 0x04, 0x6d, 0x75, 0x69,
	0x64, 0x22, 0xe4, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x12, 0x39, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e,
	0x79, 0x61, 0x63, 0x65, 0x6e, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x5f, 0x32, 0x2e, 0x4a,
	0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3c, 0x0a, 0x18, 0x65, 0x63, 0x69, 0x65,
	0x73, 0x5f, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x5f, 0x72, 0x6f, 0x6f, 0x6d,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x15, 0x65, 0x63,
	0x69, 0x65, 0x73, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x52, 0x6f, 0x6f, 0x6d,
	0x4b, 0x65, 0x79, 0x88, 0x01, 0x01, 0x12, 0x33, 0x0a, 0x04, 0x6d, 0x75, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x79, 0x61, 0x63, 0x65, 0x6e, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x32, 0x5f, 0x32, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x55, 0x6e, 0x69,
	0x71, 0x75, 0x65, 0x49, 0x44, 0x52, 0x04, 0x6d, 0x75, 0x69, 0x64, 0x42, 0x1b, 0x0a, 0x19, 0x5f,
	0x65, 0x63, 0x69, 0x65, 0x73, 0x5f, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x5f,
	0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x6b, 0x65, 0x79, 0x22, 0x5e, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x52,
	0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f,
	0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f,
	0x6d, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x04, 0x6d, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x79, 0x61, 0x63, 0x65, 0x6e, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32,
	0x5f, 0x32, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65,
	0x49, 0x44, 0x52, 0x04, 0x6d, 0x75, 0x69, 0x64, 0x22, 0xe0, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x12, 0x3f, 0x0a, 0x0b, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x79, 0x61, 0x63, 0x65, 0x6e, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x5f,
	0x32, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x52, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x47, 0x0a, 0x0c,
	0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x79, 0x61, 0x63, 0x65, 0x6e, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x32, 0x5f, 0x32, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x33, 0x0a, 0x04, 0x6d, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x79, 0x61, 0x63, 0x65, 0x6e, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x32, 0x5f, 0x32, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x55, 0x6e, 0x69, 0x71,
	0x75, 0x65, 0x49, 0x44, 0x52, 0x04, 0x6d, 0x75, 0x69, 0x64, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x70,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0xa2, 0x01, 0x0a, 0x11,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x3f, 0x0a, 0x0b, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x79, 0x61, 0x63, 0x65, 0x6e, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x5f, 0x32,
	0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x52,
	0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x33, 0x0a, 0x04, 0x6d,
	0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x79, 0x61, 0x63, 0x65,
	0x6e, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x5f, 0x32, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x44, 0x52, 0x04, 0x6d, 0x75, 0x69, 0x64,
	0x22, 0x48, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x12, 0x33, 0x0a, 0x04, 0x6d, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x79, 0x61, 0x63, 0x65, 0x6e, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x32, 0x5f, 0x32, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x55, 0x6e, 0x69, 0x71,
	0x75, 0x65, 0x49, 0x44, 0x52, 0x04, 0x6d, 0x75, 0x69, 0x64, 0x22, 0x5d, 0x0a, 0x0d, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x72,
	0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f,
	0x6f, 0x6d, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x04, 0x6d, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x79, 0x61, 0x63, 0x65, 0x6e, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x32, 0x5f, 0x32, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x55, 0x6e, 0x69, 0x71, 0x75,
	0x65, 0x49, 0x44, 0x52, 0x04, 0x6d, 0x75, 0x69, 0x64, 0x22, 0x44, 0x0a, 0x0d, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x12, 0x33, 0x0a, 0x04, 0x6d, 0x75,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x79, 0x61, 0x63, 0x65, 0x6e,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x5f, 0x32, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x44, 0x52, 0x04, 0x6d, 0x75, 0x69, 0x64, 0x22,
	0x73, 0x0a, 0x15, 0x47, 0x69, 0x76, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x52,
	0x69, 0x67, 0x68, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x5f, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0d, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x73, 0x12,
	0x33, 0x0a, 0x04, 0x6d, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x79, 0x61, 0x63, 0x65, 0x6e, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x5f, 0x32, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x44, 0x52, 0x04,
	0x6d, 0x75, 0x69, 0x64, 0x22, 0x4c, 0x0a, 0x15, 0x47, 0x69, 0x76, 0x65, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x64, 0x65, 0x64, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x52, 0x65, 0x73, 0x12, 0x33, 0x0a,
	0x04, 0x6d, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x79, 0x61,
	0x63, 0x65, 0x6e, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x5f, 0x32, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x44, 0x52, 0x04, 0x6d, 0x75,
	0x69, 0x64, 0x22, 0x75, 0x0a, 0x17, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x64, 0x65, 0x64, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a,
	0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x75, 0x62,
	0x6b, 0x65, 0x79, 0x73, 0x12, 0x33, 0x0a, 0x04, 0x6d, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x79, 0x61, 0x63, 0x65, 0x6e, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x32, 0x5f, 0x32, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x55, 0x6e, 0x69, 0x71, 0x75,
	0x65, 0x49, 0x44, 0x52, 0x04, 0x6d, 0x75, 0x69, 0x64, 0x22, 0x4e, 0x0a, 0x17, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x52, 0x69, 0x67, 0x68, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x12, 0x33, 0x0a, 0x04, 0x6d, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x79, 0x61, 0x63, 0x65, 0x6e, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x32, 0x5f, 0x32, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x55, 0x6e, 0x69, 0x71, 0x75,
	0x65, 0x49, 0x44, 0x52, 0x04, 0x6d, 0x75, 0x69, 0x64, 0x22, 0xa0, 0x01, 0x0a, 0x07, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x27, 0x0a, 0x0e, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x65, 0x64, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52,
	0x0d, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x54, 0x65, 0x78, 0x74, 0x12, 0x2c,
	0x0a, 0x11, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x0f, 0x65, 0x6e, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x04,
	0x6d, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x79, 0x61, 0x63,
	0x65, 0x6e, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x5f, 0x32, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x44, 0x52, 0x04, 0x6d, 0x75, 0x69,
	0x64, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x9c, 0x01, 0x0a,
	0x0e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x79, 0x61, 0x63, 0x65,
	0x6e, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x5f, 0x32, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3e, 0x0a, 0x09, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x79, 0x61, 0x63, 0x65, 0x6e, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x5f, 0x32, 0x2e,
	0x45, 0x64, 0x32, 0x35, 0x35, 0x31, 0x39, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x45, 0x0a, 0x0e, 0x53,
	0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x12, 0x33, 0x0a,
	0x04, 0x6d, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x79, 0x61,
	0x63, 0x65, 0x6e, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x5f, 0x32, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x44, 0x52, 0x04, 0x6d, 0x75,
	0x69, 0x64, 0x22, 0x5d, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x04,
	0x6d, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x79, 0x61, 0x63,
	0x65, 0x6e, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x5f, 0x32, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x44, 0x52, 0x04, 0x6d, 0x75, 0x69,
	0x64, 0x22, 0xb7, 0x01, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x79, 0x61, 0x63, 0x65, 0x6e, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x32, 0x5f, 0x32, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3e, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x79, 0x61, 0x63, 0x65,
	0x6e, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x5f, 0x32, 0x2e, 0x45, 0x64, 0x32, 0x35, 0x35,
	0x31, 0x39, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x09, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x33, 0x0a, 0x04, 0x6d, 0x75, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x79, 0x61, 0x63, 0x65, 0x6e, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x32, 0x5f, 0x32, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x55, 0x6e, 0x69,
	0x71, 0x75, 0x65, 0x49, 0x44, 0x52, 0x04, 0x6d, 0x75, 0x69, 0x64, 0x22, 0xa9, 0x01, 0x0a, 0x09,
	0x46, 0x69, 0x6c, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x75,
	0x6e, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x68, 0x75,
	0x6e, 0x6b, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x68, 0x75, 0x6e, 0x6b,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x65,
	0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x33, 0x0a, 0x04,
	0x6d, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x79, 0x61, 0x63,
	0x65, 0x6e, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x5f, 0x32, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x44, 0x52, 0x04, 0x6d, 0x75, 0x69,
	0x64, 0x4a, 0x04, 0x08, 0x04, 0x10, 0x05, 0x22, 0xa4, 0x01, 0x0a, 0x0d, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d,
	0x49, 0x64, 0x12, 0x2f, 0x0a, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x79, 0x61, 0x63, 0x65, 0x6e, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32,
	0x5f, 0x32, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x05, 0x63, 0x68,
	0x75, 0x6e, 0x6b, 0x12, 0x49, 0x0a, 0x0f, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x79,
	0x61, 0x63, 0x65, 0x6e, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x5f, 0x32, 0x2e, 0x45, 0x64,
	0x32, 0x35, 0x35, 0x31, 0x39, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x0e,
	0x63, 0x68, 0x75, 0x6e, 0x6b, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x98,
	0x01, 0x0a, 0x0d, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x12, 0x17, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x73, 0x41, 0x74, 0x12, 0x33, 0x0a, 0x04, 0x6d, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x79, 0x61, 0x63, 0x65, 0x6e, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x32, 0x5f, 0x32, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x55, 0x6e, 0x69, 0x71, 0x75,
	0x65, 0x49, 0x44, 0x52, 0x04, 0x6d, 0x75, 0x69, 0x64, 0x22, 0x5f, 0x0a, 0x0f, 0x44, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66,
	0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x04, 0x6d, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x79, 0x61, 0x63, 0x65, 0x6e, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x32, 0x5f, 0x32, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x55, 0x6e, 0x69, 0x71,
	0x75, 0x65, 0x49, 0x44, 0x52, 0x04, 0x6d, 0x75, 0x69, 0x64, 0x22, 0xc2, 0x01, 0x0a, 0x0f, 0x44,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x12, 0x2f,
	0x0a, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x79, 0x61, 0x63, 0x65, 0x6e, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x5f, 0x32, 0x2e, 0x46,
	0x69, 0x6c, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x12,
	0x49, 0x0a, 0x0f, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x79, 0x61, 0x63, 0x65, 0x6e,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x5f, 0x32, 0x2e, 0x45, 0x64, 0x32, 0x35, 0x35, 0x31,
	0x39, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x0e, 0x63, 0x68, 0x75, 0x6e,
	0x6b, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x33, 0x0a, 0x04, 0x6d, 0x75,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x79, 0x61, 0x63, 0x65, 0x6e,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x5f, 0x32, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x44, 0x52, 0x04, 0x6d, 0x75, 0x69, 0x64, 0x2a,
	0x3d, 0x0a, 0x08, 0x52, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x52,
	0x4f, 0x4f, 0x4d, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x4f, 0x4e, 0x10,
	0x00, 0x12, 0x15, 0x0a, 0x11, 0x52, 0x4f, 0x4f, 0x4d, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43,
	0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x10, 0x01, 0x22, 0x04, 0x08, 0x02, 0x10, 0x05, 0x2a, 0x76,
	0x0a, 0x11, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x1a, 0x4a, 0x4f, 0x49, 0x4e, 0x5f, 0x52, 0x45, 0x51, 0x55,
	0x45, 0x53, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x44, 0x45, 0x4e, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x1f, 0x0a, 0x1b, 0x4a, 0x4f, 0x49, 0x4e, 0x5f, 0x52, 0x45, 0x51, 0x55,
	0x45, 0x53, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49,
	0x4e, 0x47, 0x10, 0x01, 0x12, 0x20, 0x0a, 0x1c, 0x4a, 0x4f, 0x49, 0x4e, 0x5f, 0x52, 0x45, 0x51,
	0x55, 0x45, 0x53, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x41, 0x50, 0x50, 0x52,
	0x4f, 0x56, 0x45, 0x44, 0x10, 0x02, 0x32, 0xfd, 0x08, 0x0a, 0x05, 0x59, 0x61, 0x63, 0x65, 0x6e,
	0x12, 0x4a, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x1d,
	0x2e, 0x79, 0x61, 0x63, 0x65, 0x6e, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x5f, 0x32, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e,
	0x79, 0x61, 0x63, 0x65, 0x6e, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x5f, 0x32, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x12, 0x4d, 0x0a, 0x0b,
	0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x2e, 0x79, 0x61,
	0x63, 0x65, 0x6e, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x5f, 0x32, 0x2e, 0x47, 0x65, 0x74,
	0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x79, 0x61,
	0x63, 0x65, 0x6e, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x5f, 0x32, 0x2e, 0x47, 0x65, 0x74,
	0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x12, 0x56, 0x0a, 0x0e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x2e,
	0x79, 0x61, 0x63, 0x65, 0x6e, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x5f, 0x32, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71,
	0x1a, 0x21, 0x2e, 0x79, 0x61, 0x63, 0x65, 0x6e, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x5f,
	0x32, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x12, 0x4a, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6f,
	0x6d, 0x12, 0x1d, 0x2e, 0x79, 0x61, 0x63, 0x65, 0x6e, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32,
	0x5f, 0x32, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71,
	0x1a, 0x1d, 0x2e, 0x79, 0x61, 0x63, 0x65, 0x6e, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x5f,
	0x32, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x12,
	0x59, 0x0a, 0x0f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x6f,
	0x6f, 0x6d, 0x12, 0x22, 0x2e, 0x79, 0x61, 0x63, 0x65, 0x6e, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x32, 0x5f, 0x32, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x52,
	0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x79, 0x61, 0x63, 0x65, 0x6e, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x32, 0x5f, 0x32, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4a,
	0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x12, 0x68, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x27, 0x2e, 0x79, 0x61, 0x63, 0x65, 0x6e, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x32, 0x5f, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x79, 0x61,
	0x63, 0x65, 0x6e, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x5f, 0x32, 0x2e, 0x47, 0x65, 0x74,
	0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x73, 0x12, 0x4d, 0x0a, 0x0b, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x1e, 0x2e, 0x79, 0x61, 0x63, 0x65, 0x6e, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x32, 0x5f, 0x32, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x79, 0x61, 0x63, 0x65, 0x6e, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x32, 0x5f, 0x32, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x73, 0x12, 0x4d, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x12, 0x1d, 0x2e, 0x79, 0x61, 0x63, 0x65, 0x6e, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x32, 0x5f, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x1d, 0x2e, 0x79, 0x61, 0x63, 0x65, 0x6e, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32,
	0x5f, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73,
	0x30, 0x01, 0x12, 0x4c, 0x0a, 0x0a, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65,
	0x12, 0x1d, 0x2e, 0x79, 0x61, 0x63, 0x65, 0x6e, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x5f,
	0x32, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x1d, 0x2e, 0x79, 0x61, 0x63, 0x65, 0x6e, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x5f, 0x32,
	0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x28, 0x01,
	0x12, 0x52, 0x0a, 0x0c, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65,
	0x12, 0x1f, 0x2e, 0x79, 0x61, 0x63, 0x65, 0x6e, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x5f,
	0x32, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x1f, 0x2e, 0x79, 0x61, 0x63, 0x65, 0x6e, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32,
	0x5f, 0x32, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x30, 0x01, 0x12, 0x62, 0x0a, 0x12, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x4a,
	0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x2e, 0x79, 0x61, 0x63,
	0x65, 0x6e, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x5f, 0x32, 0x2e, 0x41, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x65, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x25, 0x2e, 0x79, 0x61, 0x63, 0x65, 0x6e, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32,
	0x5f, 0x32, 0x2e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x62, 0x0a, 0x12, 0x47, 0x69, 0x76, 0x65,
	0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x12, 0x25,
	0x2e, 0x79, 0x61, 0x63, 0x65, 0x6e, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x5f, 0x32, 0x2e,
	0x47, 0x69, 0x76, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x52, 0x69, 0x67, 0x68,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x79, 0x61, 0x63, 0x65, 0x6e, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x32, 0x5f, 0x32, 0x2e, 0x47, 0x69, 0x76, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e,
	0x64, 0x65, 0x64, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x52, 0x65, 0x73, 0x12, 0x68, 0x0a, 0x14,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x52, 0x69,
	0x67, 0x68, 0x74, 0x73, 0x12, 0x27, 0x2e, 0x79, 0x61, 0x63, 0x65, 0x6e, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x32, 0x5f, 0x32, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x64, 0x65, 0x64, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e,
	0x79, 0x61, 0x63, 0x65, 0x6e, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x5f, 0x32, 0x2e, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x52, 0x69, 0x67,
	0x68, 0x74, 0x73, 0x52, 0x65, 0x73, 0x42, 0x10, 0x5a, 0x0e, 0x79, 0x61, 0x63, 0x65, 0x6e, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x5f, 0x32, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_yacen_api_yacen_latest_api_proto_rawDescOnce sync.Once
	file_yacen_api_yacen_latest_api_proto_rawDescData = file_yacen_api_yacen_latest_api_proto_rawDesc
)

func file_yacen_api_yacen_latest_api_proto_rawDescGZIP() []byte {
	file_yacen_api_yacen_latest_api_proto_rawDescOnce.Do(func() {
		file_yacen_api_yacen_latest_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_yacen_api_yacen_latest_api_proto_rawDescData)
	})
	return file_yacen_api_yacen_latest_api_proto_rawDescData
}

var file_yacen_api_yacen_latest_api_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_yacen_api_yacen_latest_api_proto_msgTypes = make([]protoimpl.MessageInfo, 32)
var file_yacen_api_yacen_latest_api_proto_goTypes = []interface{}{
	(RoomType)(0),                   // 0: yacen_api.v2_2.RoomType
	(JoinRequestStatus)(0),          // 1: yacen_api.v2_2.JoinRequestStatus
	(*MessageUniqueID)(nil),         // 2: yacen_api.v2_2.MessageUniqueID
	(*Ed25519Signature)(nil),        // 3: yacen_api.v2_2.Ed25519Signature
	(*RoomInfoPublic)(nil),          // 4: yacen_api.v2_2.RoomInfoPublic
	(*RoomInfoPrivate)(nil),         // 5: yacen_api.v2_2.RoomInfoPrivate
	(*CreateRoomReq)(nil),           // 6: yacen_api.v2_2.CreateRoomReq
	(*CreateRoomRes)(nil),           // 7: yacen_api.v2_2.CreateRoomRes
	(*RequestJoinRoomReq)(nil),      // 8: yacen_api.v2_2.RequestJoinRoomReq
	(*RequestJoinRoomRes)(nil),      // 9: yacen_api.v2_2.RequestJoinRoomRes
	(*ApproveJoinRequestReq)(nil),   // 10: yacen_api.v2_2.ApproveJoinRequestReq
	(*ApproveJoinRequestRes)(nil),   // 11: yacen_api.v2_2.ApproveJoinRequestRes
	(*GetJoinRequestStatusReq)(nil), // 12: yacen_api.v2_2.GetJoinRequestStatusReq
	(*GetJoinRequestStatusRes)(nil), // 13: yacen_api.v2_2.GetJoinRequestStatusRes
	(*GetRoomInfoReq)(nil),          // 14: yacen_api.v2_2.GetRoomInfoReq
	(*GetRoomInfoRes)(nil),          // 15: yacen_api.v2_2.GetRoomInfoRes
	(*UpdateRoomInfoReq)(nil),       // 16: yacen_api.v2_2.UpdateRoomInfoReq
	(*UpdateRoomInfoRes)(nil),       // 17: yacen_api.v2_2.UpdateRoomInfoRes
	(*DeleteRoomReq)(nil),           // 18: yacen_api.v2_2.DeleteRoomReq
	(*DeleteRoomRes)(nil),           // 19: yacen_api.v2_2.DeleteRoomRes
	(*GiveExtendedRightsReq)(nil),   // 20: yacen_api.v2_2.GiveExtendedRightsReq
	(*GiveExtendedRightsRes)(nil),   // 21: yacen_api.v2_2.GiveExtendedRightsRes
	(*RemoveExtendedRightsReq)(nil), // 22: yacen_api.v2_2.RemoveExtendedRightsReq
	(*RemoveExtendedRightsRes)(nil), // 23: yacen_api.v2_2.RemoveExtendedRightsRes
	(*Message)(nil),                 // 24: yacen_api.v2_2.Message
	(*SendMessageReq)(nil),          // 25: yacen_api.v2_2.SendMessageReq
	(*SendMessageRes)(nil),          // 26: yacen_api.v2_2.SendMessageRes
	(*GetMessageReq)(nil),           // 27: yacen_api.v2_2.GetMessageReq
	(*GetMessageRes)(nil),           // 28: yacen_api.v2_2.GetMessageRes
	(*FileChunk)(nil),               // 29: yacen_api.v2_2.FileChunk
	(*UploadFileReq)(nil),           // 30: yacen_api.v2_2.UploadFileReq
	(*UploadFileRes)(nil),           // 31: yacen_api.v2_2.UploadFileRes
	(*DownloadFileReq)(nil),         // 32: yacen_api.v2_2.DownloadFileReq
	(*DownloadFileRes)(nil),         // 33: yacen_api.v2_2.DownloadFileRes
	(*timestamppb.Timestamp)(nil),   // 34: google.protobuf.Timestamp
}
var file_yacen_api_yacen_latest_api_proto_depIdxs = []int32{
	34, // 0: yacen_api.v2_2.MessageUniqueID.timestamp:type_name -> google.protobuf.Timestamp
	0,  // 1: yacen_api.v2_2.RoomInfoPublic.room_type:type_name -> yacen_api.v2_2.RoomType
	4,  // 2: yacen_api.v2_2.CreateRoomReq.public_info:type_name -> yacen_api.v2_2.RoomInfoPublic
	2,  // 3: yacen_api.v2_2.CreateRoomReq.muid:type_name -> yacen_api.v2_2.MessageUniqueID
	2,  // 4: yacen_api.v2_2.CreateRoomRes.muid:type_name -> yacen_api.v2_2.MessageUniqueID
	2,  // 5: yacen_api.v2_2.RequestJoinRoomReq.muid:type_name -> yacen_api.v2_2.MessageUniqueID
	2,  // 6: yacen_api.v2_2.RequestJoinRoomRes.muid:type_name -> yacen_api.v2_2.MessageUniqueID
	2,  // 7: yacen_api.v2_2.ApproveJoinRequestReq.muid:type_name -> yacen_api.v2_2.MessageUniqueID
	2,  // 8: yacen_api.v2_2.ApproveJoinRequestRes.muid:type_name -> yacen_api.v2_2.MessageUniqueID
	2,  // 9: yacen_api.v2_2.GetJoinRequestStatusReq.muid:type_name -> yacen_api.v2_2.MessageUniqueID
	1,  // 10: yacen_api.v2_2.GetJoinRequestStatusRes.status:type_name -> yacen_api.v2_2.JoinRequestStatus
	2,  // 11: yacen_api.v2_2.GetJoinRequestStatusRes.muid:type_name -> yacen_api.v2_2.MessageUniqueID
	2,  // 12: yacen_api.v2_2.GetRoomInfoReq.muid:type_name -> yacen_api.v2_2.MessageUniqueID
	4,  // 13: yacen_api.v2_2.GetRoomInfoRes.public_info:type_name -> yacen_api.v2_2.RoomInfoPublic
	5,  // 14: yacen_api.v2_2.GetRoomInfoRes.private_info:type_name -> yacen_api.v2_2.RoomInfoPrivate
	2,  // 15: yacen_api.v2_2.GetRoomInfoRes.muid:type_name -> yacen_api.v2_2.MessageUniqueID
	4,  // 16: yacen_api.v2_2.UpdateRoomInfoReq.public_info:type_name -> yacen_api.v2_2.RoomInfoPublic
	2,  // 17: yacen_api.v2_2.UpdateRoomInfoReq.muid:type_name -> yacen_api.v2_2.MessageUniqueID
	2,  // 18: yacen_api.v2_2.UpdateRoomInfoRes.muid:type_name -> yacen_api.v2_2.MessageUniqueID
	2,  // 19: yacen_api.v2_2.DeleteRoomReq.muid:type_name -> yacen_api.v2_2.MessageUniqueID
	2,  // 20: yacen_api.v2_2.DeleteRoomRes.muid:type_name -> yacen_api.v2_2.MessageUniqueID
	2,  // 21: yacen_api.v2_2.GiveExtendedRightsReq.muid:type_name -> yacen_api.v2_2.MessageUniqueID
	2,  // 22: yacen_api.v2_2.GiveExtendedRightsRes.muid:type_name -> yacen_api.v2_2.MessageUniqueID
	2,  // 23: yacen_api.v2_2.RemoveExtendedRightsReq.muid:type_name -> yacen_api.v2_2.MessageUniqueID
	2,  // 24: yacen_api.v2_2.RemoveExtendedRightsRes.muid:type_name -> yacen_api.v2_2.MessageUniqueID
	2,  // 25: yacen_api.v2_2.Message.muid:type_name -> yacen_api.v2_2.MessageUniqueID
	24, // 26: yacen_api.v2_2.SendMessageReq.message:type_name -> yacen_api.v2_2.Message
	3,  // 27: yacen_api.v2_2.SendMessageReq.signature:type_name -> yacen_api.v2_2.Ed25519Signature
	2,  // 28: yacen_api.v2_2.SendMessageRes.muid:type_name -> yacen_api.v2_2.MessageUniqueID
	2,  // 29: yacen_api.v2_2.GetMessageReq.muid:type_name -> yacen_api.v2_2.MessageUniqueID
	24, // 30: yacen_api.v2_2.GetMessageRes.message:type_name -> yacen_api.v2_2.Message
	3,  // 31: yacen_api.v2_2.GetMessageRes.signature:type_name -> yacen_api.v2_2.Ed25519Signature
	2,  // 32: yacen_api.v2_2.GetMessageRes.muid:type_name -> yacen_api.v2_2.MessageUniqueID
	2,  // 33: yacen_api.v2_2.FileChunk.muid:type_name -> yacen_api.v2_2.MessageUniqueID
	29, // 34: yacen_api.v2_2.UploadFileReq.chunk:type_name -> yacen_api.v2_2.FileChunk
	3,  // 35: yacen_api.v2_2.UploadFileReq.chunk_signature:type_name -> yacen_api.v2_2.Ed25519Signature
	34, // 36: yacen_api.v2_2.UploadFileRes.expires_at:type_name -> google.protobuf.Timestamp
	2,  // 37: yacen_api.v2_2.UploadFileRes.muid:type_name -> yacen_api.v2_2.MessageUniqueID
	2,  // 38: yacen_api.v2_2.DownloadFileReq.muid:type_name -> yacen_api.v2_2.MessageUniqueID
	29, // 39: yacen_api.v2_2.DownloadFileRes.chunk:type_name -> yacen_api.v2_2.FileChunk
	3,  // 40: yacen_api.v2_2.DownloadFileRes.chunk_signature:type_name -> yacen_api.v2_2.Ed25519Signature
	2,  // 41: yacen_api.v2_2.DownloadFileRes.muid:type_name -> yacen_api.v2_2.MessageUniqueID
	6,  // 42: yacen_api.v2_2.Yacen.CreateRoom:input_type -> yacen_api.v2_2.CreateRoomReq
	14, // 43: yacen_api.v2_2.Yacen.GetRoomInfo:input_type -> yacen_api.v2_2.GetRoomInfoReq
	16, // 44: yacen_api.v2_2.Yacen.UpdateRoomInfo:input_type -> yacen_api.v2_2.UpdateRoomInfoReq
	18, // 45: yacen_api.v2_2.Yacen.DeleteRoom:input_type -> yacen_api.v2_2.DeleteRoomReq
	8,  // 46: yacen_api.v2_2.Yacen.RequestJoinRoom:input_type -> yacen_api.v2_2.RequestJoinRoomReq
	12, // 47: yacen_api.v2_2.Yacen.GetJoinRequestStatus:input_type -> yacen_api.v2_2.GetJoinRequestStatusReq
	25, // 48: yacen_api.v2_2.Yacen.SendMessage:input_type -> yacen_api.v2_2.SendMessageReq
	27, // 49: yacen_api.v2_2.Yacen.GetMessages:input_type -> yacen_api.v2_2.GetMessageReq
	30, // 50: yacen_api.v2_2.Yacen.UploadFile:input_type -> yacen_api.v2_2.UploadFileReq
	32, // 51: yacen_api.v2_2.Yacen.DownloadFile:input_type -> yacen_api.v2_2.DownloadFileReq
	10, // 52: yacen_api.v2_2.Yacen.ApproveJoinRequest:input_type -> yacen_api.v2_2.ApproveJoinRequestReq
	20, // 53: yacen_api.v2_2.Yacen.GiveExtendedRights:input_type -> yacen_api.v2_2.GiveExtendedRightsReq
	22, // 54: yacen_api.v2_2.Yacen.RemoveExtendedRights:input_type -> yacen_api.v2_2.RemoveExtendedRightsReq
	7,  // 55: yacen_api.v2_2.Yacen.CreateRoom:output_type -> yacen_api.v2_2.CreateRoomRes
	15, // 56: yacen_api.v2_2.Yacen.GetRoomInfo:output_type -> yacen_api.v2_2.GetRoomInfoRes
	17, // 57: yacen_api.v2_2.Yacen.UpdateRoomInfo:output_type -> yacen_api.v2_2.UpdateRoomInfoRes
	19, // 58: yacen_api.v2_2.Yacen.DeleteRoom:output_type -> yacen_api.v2_2.DeleteRoomRes
	9,  // 59: yacen_api.v2_2.Yacen.RequestJoinRoom:output_type -> yacen_api.v2_2.RequestJoinRoomRes
	13, // 60: yacen_api.v2_2.Yacen.GetJoinRequestStatus:output_type -> yacen_api.v2_2.GetJoinRequestStatusRes
	26, // 61: yacen_api.v2_2.Yacen.SendMessage:output_type -> yacen_api.v2_2.SendMessageRes
	28, // 62: yacen_api.v2_2.Yacen.GetMessages:output_type -> yacen_api.v2_2.GetMessageRes
	31, // 63: yacen_api.v2_2.Yacen.UploadFile:output_type -> yacen_api.v2_2.UploadFileRes
	33, // 64: yacen_api.v2_2.Yacen.DownloadFile:output_type -> yacen_api.v2_2.DownloadFileRes
	11, // 65: yacen_api.v2_2.Yacen.ApproveJoinRequest:output_type -> yacen_api.v2_2.ApproveJoinRequestRes
	21, // 66: yacen_api.v2_2.Yacen.GiveExtendedRights:output_type -> yacen_api.v2_2.GiveExtendedRightsRes
	23, // 67: yacen_api.v2_2.Yacen.RemoveExtendedRights:output_type -> yacen_api.v2_2.RemoveExtendedRightsRes
	55, // [55:68] is the sub-list for method output_type
	42, // [42:55] is the sub-list for method input_type
	42, // [42:42] is the sub-list for extension type_name
	42, // [42:42] is the sub-list for extension extendee
	0,  // [0:42] is the sub-list for field type_name
}

func init() { file_yacen_api_yacen_latest_api_proto_init() }
func file_yacen_api_yacen_latest_api_proto_init() {
	if File_yacen_api_yacen_latest_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_yacen_api_yacen_latest_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageUniqueID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yacen_api_yacen_latest_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ed25519Signature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yacen_api_yacen_latest_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomInfoPublic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yacen_api_yacen_latest_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomInfoPrivate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yacen_api_yacen_latest_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRoomReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yacen_api_yacen_latest_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRoomRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yacen_api_yacen_latest_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestJoinRoomReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yacen_api_yacen_latest_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestJoinRoomRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yacen_api_yacen_latest_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApproveJoinRequestReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yacen_api_yacen_latest_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApproveJoinRequestRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yacen_api_yacen_latest_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJoinRequestStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yacen_api_yacen_latest_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJoinRequestStatusRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yacen_api_yacen_latest_api_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoomInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yacen_api_yacen_latest_api_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoomInfoRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yacen_api_yacen_latest_api_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRoomInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yacen_api_yacen_latest_api_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRoomInfoRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yacen_api_yacen_latest_api_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRoomReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yacen_api_yacen_latest_api_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRoomRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yacen_api_yacen_latest_api_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GiveExtendedRightsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yacen_api_yacen_latest_api_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GiveExtendedRightsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yacen_api_yacen_latest_api_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveExtendedRightsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yacen_api_yacen_latest_api_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveExtendedRightsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yacen_api_yacen_latest_api_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yacen_api_yacen_latest_api_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMessageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yacen_api_yacen_latest_api_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMessageRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yacen_api_yacen_latest_api_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMessageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yacen_api_yacen_latest_api_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMessageRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yacen_api_yacen_latest_api_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileChunk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yacen_api_yacen_latest_api_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadFileReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yacen_api_yacen_latest_api_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadFileRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yacen_api_yacen_latest_api_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadFileReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yacen_api_yacen_latest_api_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadFileRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_yacen_api_yacen_latest_api_proto_msgTypes[11].OneofWrappers = []interface{}{}
	file_yacen_api_yacen_latest_api_proto_msgTypes[13].OneofWrappers = []interface{}{}
	file_yacen_api_yacen_latest_api_proto_msgTypes[22].OneofWrappers = []interface{}{
		(*Message_EncryptedText)(nil),
		(*Message_EncryptedFileId)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_yacen_api_yacen_latest_api_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   32,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_yacen_api_yacen_latest_api_proto_goTypes,
		DependencyIndexes: file_yacen_api_yacen_latest_api_proto_depIdxs,
		EnumInfos:         file_yacen_api_yacen_latest_api_proto_enumTypes,
		MessageInfos:      file_yacen_api_yacen_latest_api_proto_msgTypes,
	}.Build()
	File_yacen_api_yacen_latest_api_proto = out.File
	file_yacen_api_yacen_latest_api_proto_rawDesc = nil
	file_yacen_api_yacen_latest_api_proto_goTypes = nil
	file_yacen_api_yacen_latest_api_proto_depIdxs = nil
}
